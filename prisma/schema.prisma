// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Enumeradores
enum TipoUsuario {
  ADMINISTRADOR
  CLIENTE
  TECNICO
  OTRO
}

enum CategoriaNombre {
  ELECTRONICA
  ROPA
  HOGAR
  DEPORTES
}

enum EstadoVenta {
  PENDIENTE
  COMPLETADA
  CANCELADA
}

// Modelos
model Usuario {
  id          Int         @id @default(autoincrement())
  nombre      String
  apellido    String
  email       String      @unique
  contrase√±a  String
  activo      Boolean     @default(true)
  telefono    String?
  tipo        TipoUsuario
  ventas      Venta[]     @relation("VentasUsuario")
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  @@map("usuarios")
}

model Categoria {
  id          Int             @id @default(autoincrement())
  nombre      CategoriaNombre @unique
  descripcion String?
  productos   Producto[]      @relation("ProductosCategoria")
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt

  @@map("categorias")
}

model Producto {
  id          Int         @id @default(autoincrement())
  nombre      String
  descripcion String
  precio      Float
  stock       Int
  categoria   Categoria   @relation("ProductosCategoria", fields: [categoriaId], references: [id])
  categoriaId Int
  activo      Boolean     @default(true)
  imagenes    Imagen[]    @relation("ImagenesProducto")
  itemsVenta  ItemVenta[] @relation("ItemsProducto")
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  @@map("productos")
}

model Imagen {
  id         Int       @id @default(autoincrement())
  url        String
  producto   Producto  @relation("ImagenesProducto", fields: [productoId], references: [id], onDelete: Cascade)
  productoId Int
  createdAt  DateTime  @default(now())

  @@map("imagenes")
}

model Venta {
  id        Int         @id @default(autoincrement())
  cliente   Usuario     @relation("VentasUsuario", fields: [clienteId], references: [id])
  clienteId Int
  items     ItemVenta[] @relation("ItemsVenta")
  total     Float
  estado    EstadoVenta @default(PENDIENTE)
  fecha     DateTime    @default(now())
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt

  @@map("ventas")
}

model ItemVenta {
  id             Int       @id @default(autoincrement())
  venta          Venta     @relation("ItemsVenta", fields: [ventaId], references: [id], onDelete: Cascade)
  ventaId        Int
  producto       Producto  @relation("ItemsProducto", fields: [productoId], references: [id])
  productoId     Int
  cantidad       Int
  precioUnitario Float
  subtotal       Float
  createdAt      DateTime  @default(now())

  @@map("items_venta")
}